{"version":3,"file":"usePage.d2f65d4f.js","sources":["../../src/hooks/web/usePage.ts"],"sourcesContent":["import type { RouteLocationRaw, Router } from 'vue-router'\r\nimport { useRouter } from 'vue-router'\r\nimport { RouteEnum } from '@/enums/routeEnum'\r\nimport { isString } from '@/utils/is'\r\nimport { REDIRECT_TO_NAME } from '@/router/routes/static'\r\nimport { unref } from 'vue'\r\n\r\nexport type RouteLocationRawEx = Omit<RouteLocationRaw, 'path'> & { path: RouteEnum }\r\n\r\nfunction handleLogError(e: Error) {\r\n\tconsole.error(e)\r\n}\r\n\r\nexport function useGo(_router?: Router) {\r\n\tlet router\r\n\tif (!_router) router = useRouter()\r\n\tconst { push, replace } = _router || router\r\n\r\n\tfunction go(\r\n\t\topt: RouteEnum | RouteLocationRawEx | string = RouteEnum.BASIC_ROOT,\r\n\t\tisReplace = false\r\n\t) {\r\n\t\tif (!opt) return\r\n\t\tif (isString(opt)) {\r\n\t\t\tisReplace ? replace(opt).catch(handleLogError) : push(opt).catch(handleLogError)\r\n\t\t} else {\r\n\t\t\tconst o = opt as RouteLocationRaw\r\n\t\t\tisReplace ? replace(o).catch(handleLogError) : push(o).catch(handleLogError)\r\n\t\t}\r\n\t}\r\n\treturn go\r\n}\r\n\r\n/**\r\n * @description: redo current page\r\n */\r\nexport const useRedo = (_router?: Router) => {\r\n\tconst { push, currentRoute } = _router || useRouter()\r\n\tconst { query, params = {}, name, fullPath } = unref(currentRoute.value)\r\n\tfunction redo(): Promise<boolean> {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tif (name === REDIRECT_TO_NAME) {\r\n\t\t\t\tresolve(false)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (name && Object.keys(params).length > 0) {\r\n\t\t\t\tparams['_redirect_type'] = 'name'\r\n\t\t\t\tparams['path'] = String(name)\r\n\t\t\t} else {\r\n\t\t\t\tparams['_redirect_type'] = 'path'\r\n\t\t\t\tparams['path'] = fullPath\r\n\t\t\t}\r\n\t\t\tpush({ name: REDIRECT_TO_NAME, params, query }).then(() => resolve(true))\r\n\t\t})\r\n\t}\r\n\treturn redo\r\n}\r\n"],"names":["handleLogError","e","useGo","_router","router","useRouter","push","replace","go","opt","RouteEnum","isReplace","isString","o"],"mappings":"sDASA,SAASA,EAAeC,EAAU,CACjC,QAAQ,MAAMA,CAAC,CAChB,CAEO,SAASC,EAAMC,EAAkB,CACnC,IAAAC,EACCD,IAASC,EAASC,EAAU,GACjC,KAAM,CAAE,KAAAC,EAAM,QAAAC,GAAYJ,GAAWC,EAErC,SAASI,EACRC,EAA+CC,EAAU,WACzDC,EAAY,GACX,CACD,GAAI,EAACF,EACD,GAAAG,EAASH,CAAG,EACHE,EAAAJ,EAAQE,CAAG,EAAE,MAAMT,CAAc,EAAIM,EAAKG,CAAG,EAAE,MAAMT,CAAc,MACzE,CACN,MAAMa,EAAIJ,EACEE,EAAAJ,EAAQM,CAAC,EAAE,MAAMb,CAAc,EAAIM,EAAKO,CAAC,EAAE,MAAMb,CAAc,CAC5E,CACD,CACO,OAAAQ,CACR"}