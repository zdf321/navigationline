{"version":3,"file":"Login.58b15f87.js","sources":["../../src/views/login/LoginForm.vue","../../src/views/login/AgreeTerms.vue","../../src/views/login/RegisterForm.vue","../../src/views/login/Login.vue"],"sourcesContent":["<template>\n\t<ElForm\n\t\tref=\"ruleFormRef\"\n\t\t:model=\"form\"\n\t\t:rules=\"getFormRules\"\n\t\tlabel-position=\"left\"\n\t\tlabel-width=\"0\"\n\t\tsize=\"large\"\n\t\tclass=\"login-basic-form\"\n\t>\n\t\t<ElFormItem label=\"\" prop=\"account\">\n\t\t\t<el-input v-model=\"form.account\" placeholder=\"请输入用户名\"> </el-input>\n\t\t</ElFormItem>\n\t\t<ElFormItem label=\"\" prop=\"password\">\n\t\t\t<el-input\n\t\t\t\tv-model=\"form.password\"\n\t\t\t\ttype=\"password\"\n\t\t\t\tplaceholder=\"请输入密码\"\n\t\t\t\tshow-password\n\t\t\t></el-input>\n\t\t</ElFormItem>\n\t\t<ElFormItem>\n\t\t\t<el-button :loading=\"loading\" class=\"w-full\" type=\"primary\" round @click=\"handleLogin\">{{\n\t\t\t\tloginText\n\t\t\t}}</el-button>\n\t\t</ElFormItem>\n\t\t<div class=\"ops-button flex justify-between items-center\">\n\t\t\t<span class=\"forget cursor-pointer\"></span>\n\t\t\t<el-button type=\"text\" @click=\"handleToRegister\">去注册</el-button>\n\t\t</div>\n\t</ElForm>\n</template>\n\n<script setup lang=\"ts\">\n\timport { computed, reactive, ref, unref } from 'vue'\n\timport type { ElForm } from 'element-plus'\n\timport { useRouter } from 'vue-router'\n\timport { LoginStateEnum, useFormRules, useFormValid, useLoginState } from './useLogin'\n\timport { useGo } from '@/hooks/web/usePage'\n\timport { RouteEnum } from '@/enums/routeEnum'\n\timport { useUserStore } from '@/store/modules/user'\n\timport { useTeamStore } from '@/store/modules/team'\n\n\ttype FormInstance = InstanceType<typeof ElForm>\n\n\tconst userStore = useUserStore()\n\tconst teamStore = useTeamStore()\n\tconst router = useRouter()\n\tconst ruleFormRef = ref<FormInstance>()\n\tconst { validForm } = useFormValid(ruleFormRef)\n\tconst { getFormRules } = useFormRules()\n\tconst { setLoginState } = useLoginState()\n\tconst loading = ref<boolean>(false)\n\tconst go = useGo()\n\tconst form = reactive({\n\t\taccount: '',\n\t\tpassword: '',\n\t\tloginType: 0\n\t})\n\tconst loginText = computed(() => (unref(loading) ? '登录中...' : '立即登录'))\n\tconst href = router.currentRoute.value.href\n\n\tfunction handleToRegister() {\n\t\tsetLoginState(LoginStateEnum.REGISTER)\n\t}\n\tasync function handleLogin() {\n\t\tconst validData = await validForm()\n\t\tif (!validData) return\n\n\t\ttry {\n\t\t\tloading.value = true\n\t\t\tawait userStore.login(form)\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (href.indexOf('callback') > 0) {\n\t\t\t\t\tconst callback = href.substring(href.indexOf('callback') + 9)\n\t\t\t\t\twindow.open(callback, '_self')\n\t\t\t\t} else {\n\t\t\t\t\tgo(teamStore.getActiveTeamType === 'TEAM' ? RouteEnum.TEAM : RouteEnum.SELF_FILE)\n\t\t\t\t}\n\t\t\t\tloading.value = false\n\t\t\t}, 500)\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t\tloading.value = false\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\" scoped>\n\t.login-basic-form {\n\t\t.ops-button {\n\t\t\tfont-size: 14px;\n\t\t\tmargin-top: -10px;\n\t\t\t.forget {\n\t\t\t\tcolor: #666;\n\t\t\t}\n\t\t}\n\t}\n</style>\n","<template>\n\t<div class=\"agree-terms flex justify-center items-center\" v-if=\"getShow\">\n\t\t<span>{{ getLoginStateLabel }}即表示您已阅读并同意</span>\n\t\t<el-button type=\"text\" @click=\"goTos\">服务条款</el-button>\n\t</div>\n</template>\n\n<script setup lang=\"ts\">\n\timport { useLoginState, LoginStateEnum } from './useLogin'\n\timport { computed, unref } from 'vue'\n  import {router} from \"@/router\";\n  import {RouteEnum} from \"@/enums/routeEnum\";\n\n\tconst { getLoginState } = useLoginState()\n\tconst getShow = computed(() =>\n\t\t[\n\t\t\tLoginStateEnum.LOGIN,\n\t\t\tLoginStateEnum.MOBILE,\n\t\t\tLoginStateEnum.QR_CODE,\n\t\t\tLoginStateEnum.REGISTER\n\t\t].includes(unref(getLoginState))\n\t)\n\tconst getLoginStateLabel = computed(() =>\n\t\t[LoginStateEnum.LOGIN, LoginStateEnum.MOBILE].includes(unref(getLoginState)) ? '登录' : '注册'\n\t)\n\n  function goTos() {\n    const url = router.resolve(RouteEnum.TOS).href\n    window.open(url, '_blank')\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n\t.agree-terms {\n\t\tbackground-color: #f4f6fa;\n\t\tpadding: 10px 0;\n\t\ttext-align: center;\n\t\tfont-size: 14px;\n\t\tcolor: #333;\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: -52px;\n\t\tz-index: 10;\n\t}\n</style>\n","<template>\n\t<ElForm\n\t\tref=\"ruleFormRef\"\n\t\t:model=\"form\"\n\t\t:rules=\"getFormRules\"\n\t\tlabel-position=\"left\"\n\t\tlabel-width=\"0\"\n\t\tsize=\"large\"\n\t\tclass=\"register-form\"\n\t>\n\t\t<ElFormItem label=\"\" prop=\"account\">\n\t\t\t<el-input v-model=\"form.account\" placeholder=\"请输入用户名\"> </el-input>\n\t\t</ElFormItem>\n\t\t<ElFormItem label=\"\" prop=\"password\">\n\t\t\t<el-input\n\t\t\t\tv-model=\"form.password\"\n\t\t\t\ttype=\"password\"\n\t\t\t\tplaceholder=\"请输入密码\"\n\t\t\t\tshow-password\n\t\t\t></el-input>\n\t\t</ElFormItem>\n\t\t<ElFormItem>\n\t\t\t<el-button :loading=\"loading\" class=\"w-full\" type=\"primary\" round @click=\"handleRegister\">\n\t\t\t\t立即注册\n\t\t\t</el-button>\n\t\t</ElFormItem>\n\t\t<div class=\"ops-button flex justify-end items-center\">\n\t\t\t<span class=\"hased\">已有帐号,</span>\n\t\t\t<el-button type=\"text\" @click=\"handleToLogin\">去登录</el-button>\n\t\t</div>\n\t</ElForm>\n</template>\n\n<script setup lang=\"ts\">\n\timport { ref, reactive } from 'vue'\n\timport type { ElForm } from 'element-plus'\n\timport { LoginStateEnum, useFormRules, useLoginState, useFormValid } from './useLogin'\n\timport { fetchRegister, fetchSendCode } from '@/api/fetchs/user'\n\timport { ElMessage } from 'element-plus'\n\timport { useEmit, useOnEmitFnForWait } from '@/utils/useEmitter'\n\n\ttype FormInstance = InstanceType<typeof ElForm>\n\n\tconst ruleFormRef = ref<FormInstance>()\n\tconst { setLoginState } = useLoginState()\n\tconst loading = ref<boolean>(false)\n\tconst { validForm } = useFormValid(ruleFormRef)\n\tconst form = reactive({\n\t\taccount: '',\n\t\tpassword: '',\n\t\tcode: ''\n\t})\n\tconst { getFormRules } = useFormRules(form)\n\n\tconst emit = defineEmits(['reset'])\n\tfunction handleToLogin() {\n\t\tsetLoginState(LoginStateEnum.LOGIN)\n\t\temit('reset')\n\t}\n\tasync function handleSendCodeApi() {\n\t\tif (!form.account) {\n\t\t\t// @ts-ignore\n\t\t\tElMessage.warning('请先输入用户名')\n\t\t\treturn false\n\t\t}\n\n\t\t// 显示图片验证码\n\t\tuseEmit('showVerify')\n\n\t\tconst captchaParam = await useOnEmitFnForWait('verfiySuccess')\n\n\t\tawait fetchSendCode({\n\t\t\taddress: form.account,\n\t\t\tcaptchaVerification: captchaParam.captchaVerification,\n\t\t\ttype: 0\n\t\t})\n\n\t\treturn true\n\t}\n\tasync function handleRegister() {\n\t\tconst validData = await validForm()\n\t\tif (!validData) return\n\n\t\ttry {\n\t\t\tloading.value = true\n\t\t\tawait fetchRegister(form)\n\t\t\tsetTimeout(() => {\n\t\t\t\tElMessage.success('注册成功，请登录')\n\t\t\t\thandleToLogin()\n\t\t\t\tloading.value = false\n\t\t\t}, 500)\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t\tloading.value = false\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\" scoped>\n\t.register-form {\n\t\t.ops-button {\n\t\t\tfont-size: 14px;\n\t\t\tmargin-top: -10px;\n\t\t\t.hased {\n\t\t\t\tcolor: #666;\n\t\t\t}\n\t\t}\n\t}\n</style>\n","<template>\n\t<div class=\"login-container h-full\">\n\t\t<Header />\n\t\t<div class=\"flex justify-center items-center h-full login-content\">\n\t\t\t<div class=\"login-form-container p-8 pl-12 pr-12 xl:w-6/12\">\n\t\t\t\t<div class=\"login-header mb-4\">\n\t\t\t\t\t<el-tabs v-model=\"activeTab\" class=\"demo-tabs\" v-if=\"getLoginShow\">\n\t\t\t\t\t\t<el-tab-pane label=\"帐号密码登录\" name=\"login\"></el-tab-pane>\n\t\t\t\t\t</el-tabs>\n\t\t\t\t\t<div class=\"register-state\" v-if=\"getRegisterShow\">注册</div>\n\t\t\t\t</div>\n\n\t\t\t\t<LoginForm v-if=\"getLoginShow\" />\n\t\t\t\t<RegisterForm v-if=\"getRegisterShow\" @reset=\"handleReset\" />\n\n\t\t\t\t<AgreeTerms />\n\t\t\t</div>\n\t\t</div>\n\n\t\t<Verify\n\t\t\tmode=\"pop\"\n\t\t\tcaptchaType=\"blockPuzzle\"\n\t\t\t:imgSize=\"{ width: '400px', height: '200px' }\"\n\t\t\tref=\"verify\"\n\t\t\t@success=\"success\"\n\t\t></Verify>\n\t</div>\n</template>\n\n<script setup lang=\"ts\">\n\timport { computed, inject, onBeforeUnmount, ref, unref, watch } from 'vue'\n\timport { LoginStateEnum, useLoginState } from './useLogin'\n\timport LoginForm from './LoginForm.vue'\n\timport AgreeTerms from './AgreeTerms.vue'\n\timport RegisterForm from './RegisterForm.vue'\n\timport Header from '@/layout/default/header/index.vue'\n\timport Verify from '@/components/verifition/Verify.vue'\n\timport { useEmit, useOffEmitFn, useOnEmitFn } from '@/utils/useEmitter'\n\timport { useUserStore } from '@/store/modules/user'\n\timport { getToken } from '@/utils'\n\n\tconst { getLoginState, setLoginState } = useLoginState()\n\tconst getLoginShow = computed(() => unref(getLoginState) === LoginStateEnum.LOGIN)\n\tconst getRegisterShow = computed(() => unref(getLoginState) === LoginStateEnum.REGISTER)\n\n\tconst activeTab = ref<string>('login')\n\tconst verify = ref<any>(null)\n\n\twatch(\n\t\t() => unref(activeTab),\n\t\tval => {\n\t\t\tif (val === 'login') {\n\t\t\t\tsetLoginState(LoginStateEnum.LOGIN)\n\t\t\t} else {\n\t\t\t\tsetLoginState(LoginStateEnum.MOBILE)\n\t\t\t}\n\t\t}\n\t)\n\n\t// 组件销毁时\n\tonBeforeUnmount(() => {\n\t\tuseOffEmitFn('showVerify')\n\t})\n\n\tuseOnEmitFn('showVerify', onVerifyShow)\n\n\tfunction onVerifyShow() {\n\t\tverify.value.show()\n\t}\n\n\tfunction success(params) {\n\t\tuseEmit('verfiySuccess', params)\n\t}\n\n\tfunction handleReset() {\n\t\tactiveTab.value = 'login'\n\t}\n\n\tuseAutoLogin()\n\n\tfunction useAutoLogin() {\n\t\tlet cookies = inject('$cookies')\n\t\tlet token = getToken(window.location.hash)\n\t\tif (!token) {\n\t\t\treturn\n\t\t}\n\n\t\t// @ts-ignore\n\t\tcookies.config('7d')\n\t\t// @ts-ignore\n\t\tcookies.set('x-access-token', token)\n\n\t\tconst userStore = useUserStore()\n\t\tuserStore.oauthLogin()\n\t}\n</script>\n\n<style lang=\"scss\">\n\t.login-container {\n\t\toverflow: hidden;\n\n\t\t.login-content {\n\t\t\tbackground-color: #f4f4f4;\n\t\t}\n\n\t\t.login-form-container {\n\t\t\twidth: 450px;\n\t\t\tbackground-color: #fff;\n\t\t\tposition: relative;\n\t\t\ttransform: translateY(-50px);\n\t\t\tbox-shadow: 0 0 16px 0 rgb(22 81 163 / 13%);\n\n\t\t\t.el-tabs__item {\n\t\t\t\tfont-size: 18px;\n\t\t\t\tcolor: #666;\n\n\t\t\t\t&.is-active {\n\t\t\t\t\tcolor: var(--el-text-color-primary);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.el-tabs__nav-wrap::after {\n\t\t\t\theight: 0;\n\t\t\t}\n\n\t\t\t.register-state {\n\t\t\t\theight: 40px;\n\t\t\t\tline-height: 40px;\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-size: 18px;\n\t\t\t\tcolor: var(--el-text-color-primary);\n\t\t\t}\n\t\t}\n\t}\n</style>\n"],"names":["userStore","useUserStore","teamStore","useTeamStore","router","useRouter","ruleFormRef","ref","validForm","useFormValid","getFormRules","useFormRules","setLoginState","useLoginState","loading","go","useGo","form","reactive","loginText","computed","unref","href","handleToRegister","LoginStateEnum","handleLogin","__async","callback","RouteEnum","error","getLoginState","getShow","getLoginStateLabel","goTos","url","emit","__emit","handleToLogin","handleRegister","fetchRegister","ElMessage","getLoginShow","getRegisterShow","activeTab","verify","watch","val","onBeforeUnmount","useOffEmitFn","useOnEmitFn","onVerifyShow","success","params","useEmit","handleReset","useAutoLogin","cookies","inject","token","getToken"],"mappings":"siCA6CC,MAAMA,EAAYC,IACZC,EAAYC,IACZC,EAASC,IACTC,EAAcC,IACd,CAAE,UAAAC,CAAA,EAAcC,EAAaH,CAAW,EACxC,CAAE,aAAAI,GAAiBC,IACnB,CAAE,cAAAC,GAAkBC,IACpBC,EAAUP,EAAa,EAAK,EAC5BQ,EAAKC,KACLC,EAAOC,EAAS,CACrB,QAAS,GACT,SAAU,GACV,UAAW,CAAA,CACX,EACKC,EAAYC,EAAS,IAAOC,EAAMP,CAAO,EAAI,wBAAW,0BAAO,EAC/DQ,EAAOlB,EAAO,aAAa,MAAM,KAEvC,SAASmB,GAAmB,CAC3BX,EAAcY,EAAe,QAAQ,CACtC,CACA,SAAeC,GAAc,QAAAC,EAAA,sBAE5B,GAAI,GADc,MAAMlB,KAGpB,GAAA,CACHM,EAAQ,MAAQ,GACV,MAAAd,EAAU,MAAMiB,CAAI,EAC1B,WAAW,IAAM,CAChB,GAAIK,EAAK,QAAQ,UAAU,EAAI,EAAG,CACjC,MAAMK,EAAWL,EAAK,UAAUA,EAAK,QAAQ,UAAU,EAAI,CAAC,EACrD,OAAA,KAAKK,EAAU,OAAO,CAAA,MAE7BZ,EAAGb,EAAU,oBAAsB,OAAS0B,EAAU,KAAOA,EAAU,SAAS,EAEjFd,EAAQ,MAAQ,IACd,GAAG,QACEe,GACR,QAAQ,IAAIA,CAAK,EACjBf,EAAQ,MAAQ,EACjB,CACD,8qCCxEM,KAAA,CAAE,cAAAgB,GAAkBjB,IACpBkB,EAAUX,EAAS,IACxB,CACCI,EAAe,MACfA,EAAe,OACfA,EAAe,QACfA,EAAe,QAAA,EACd,SAASH,EAAMS,CAAa,CAAC,CAAA,EAE1BE,EAAqBZ,EAAS,IACnC,CAACI,EAAe,MAAOA,EAAe,MAAM,EAAE,SAASH,EAAMS,CAAa,CAAC,EAAI,eAAO,cAAA,EAGtF,SAASG,GAAQ,CACf,MAAMC,EAAM9B,EAAO,QAAQwB,EAAU,GAAG,EAAE,KACnC,OAAA,KAAKM,EAAK,QAAQ,CAC3B,ybCcD,MAAM5B,EAAcC,IACd,CAAE,cAAAK,GAAkBC,IACpBC,EAAUP,EAAa,EAAK,EAC5B,CAAE,UAAAC,CAAA,EAAcC,EAAaH,CAAW,EACxCW,EAAOC,EAAS,CACrB,QAAS,GACT,SAAU,GACV,KAAM,EAAA,CACN,EACK,CAAE,aAAAR,CAAA,EAAiBC,EAAiB,EAEpCwB,EAAOC,EACb,SAASC,GAAgB,CACxBzB,EAAcY,EAAe,KAAK,EAClCW,EAAK,OAAO,CACb,CAqBA,SAAeG,GAAiB,QAAAZ,EAAA,sBAE/B,GAAI,GADc,MAAMlB,KAGpB,GAAA,CACHM,EAAQ,MAAQ,GAChB,MAAMyB,EAActB,CAAI,EACxB,WAAW,IAAM,CAChBuB,EAAU,QAAQ,kDAAU,EACdH,IACdvB,EAAQ,MAAQ,IACd,GAAG,QACEe,GACR,QAAQ,IAAIA,CAAK,EACjBf,EAAQ,MAAQ,EACjB,CACD,82CCtDA,KAAM,CAAE,cAAAgB,EAAe,cAAAlB,CAAc,EAAIC,EAAc,EACjD4B,EAAerB,EAAS,IAAMC,EAAMS,CAAa,IAAMN,EAAe,KAAK,EAC3EkB,EAAkBtB,EAAS,IAAMC,EAAMS,CAAa,IAAMN,EAAe,QAAQ,EAEjFmB,EAAYpC,EAAY,OAAO,EAC/BqC,EAASrC,EAAS,IAAI,EAE5BsC,EACC,IAAMxB,EAAMsB,CAAS,EACdG,GAAA,CAELlC,EADGkC,IAAQ,QACGtB,EAAe,MAEfA,EAAe,MAFK,CAIpC,CAAA,EAIDuB,EAAgB,IAAM,CACrBC,GAAa,YAAY,CAAA,CACzB,EAEDC,GAAY,aAAcC,CAAY,EAEtC,SAASA,GAAe,CACvBN,EAAO,MAAM,MACd,CAEA,SAASO,EAAQC,EAAQ,CACxBC,GAAQ,gBAAiBD,CAAM,CAChC,CAEA,SAASE,GAAc,CACtBX,EAAU,MAAQ,OACnB,CAEaY,IAEb,SAASA,GAAe,CACnB,IAAAC,EAAUC,EAAO,UAAU,EAC3BC,EAAQC,EAAS,OAAO,SAAS,IAAI,EACzC,GAAI,CAACD,EACJ,OAIDF,EAAQ,OAAO,IAAI,EAEXA,EAAA,IAAI,iBAAkBE,CAAK,EAEjBzD,IACR,WAAW,CACtB"}